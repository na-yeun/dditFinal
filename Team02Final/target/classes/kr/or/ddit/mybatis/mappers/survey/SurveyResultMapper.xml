<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.survey.dao.SurveyResultMapper">
	<select id="selectSurveyExist" resultType="int">
		SELECT COUNT(*)
		FROM SURVEY_RESULT
		WHERE SBOARD_NO = #{sboardNo} AND EMP_ID = #{empId}
	</select>
	
	<insert id="insertSurveyResult">
		INSERT INTO SURVEY_RESULT (SURITEM_NO, SURQUES_NO, SBOARD_NO, EMP_ID, RES_CONTENT)
	    VALUES(
	    	#{suritemNo,jdbcType=VARCHAR}
	    	, #{surquesNo,jdbcType=VARCHAR}
	    	, #{sboardNo,jdbcType=VARCHAR}
	    	, #{empId,jdbcType=VARCHAR}
	    	, #{resContent,jdbcType=CLOB}
	    )
	</insert>
	
	<delete id="deleteSurveyResult">
		DELETE FROM SURVEY_RESULT
		WHERE SBOARD_NO = #{sboardNo}
	</delete>
	
	<select id="selectSurveyResultList" resultType="SurveyResultVO">
		WITH V_SURVEY_QUESTION AS (
		    SELECT
		        SURVEY_QUESTION.SURQUES_NO AS SURQUES_NO,
		        SURVEY_QUESTION.SBOARD_NO AS SBOARD_NO,
		        SURVEY_ITEM.SURITEM_NO AS SURITEM_NO,
		        SURVEY_ITEM.SURITEM_CONTENT AS SURITEM_CONTENT,
		        SURVEY_ITEM.SURITEM_INDEX AS SURITEM_INDEX,
		        SURVEY_QUESTION.SURQUES_TYPE AS SURQUES_TYPE
		    FROM SURVEY_QUESTION 
		    RIGHT OUTER JOIN SURVEY_ITEM 
		        ON SURVEY_QUESTION.SBOARD_NO = SURVEY_ITEM.SBOARD_NO
		        AND SURVEY_QUESTION.SURQUES_NO = SURVEY_ITEM.SURQUES_NO
		    ORDER BY SURVEY_QUESTION.SURQUES_ORDER, SURVEY_ITEM.SURITEM_INDEX
		),
		FILTERED_SURVEY_RESULT_MULTI AS (
		    SELECT 
		        V_SURVEY_QUESTION.SURQUES_NO,
		        V_SURVEY_QUESTION.SURITEM_NO,
		        NVL(
		            (SELECT TO_CHAR(COUNT(*))
		             FROM SURVEY_RESULT SR
		             WHERE SR.SURITEM_NO = V_SURVEY_QUESTION.SURITEM_NO
		               AND SR.SURQUES_NO = V_SURVEY_QUESTION.SURQUES_NO
		               AND SR.SBOARD_NO = V_SURVEY_QUESTION.SBOARD_NO),
		            '0'
		        ) AS TOTAL_RESULT,
		        ROW_NUMBER() OVER (
		            PARTITION BY V_SURVEY_QUESTION.SURITEM_NO 
		            ORDER BY V_SURVEY_QUESTION.SURITEM_INDEX
		        ) AS RN
		    FROM V_SURVEY_QUESTION
		    WHERE V_SURVEY_QUESTION.SURQUES_TYPE = 'S_MULTI'
		),
		FILTERED_SURVEY_RESULT_ELSE AS (
		    SELECT 
		        V_SURVEY_QUESTION.SURQUES_NO,
		        V_SURVEY_QUESTION.SURITEM_NO,
		        TO_CHAR(SURVEY_RESULT.RES_CONTENT) AS TOTAL_RESULT,
		        1 AS RN -- 모든 행을 출력하기 위해 고정된 값
		    FROM V_SURVEY_QUESTION
		    LEFT OUTER JOIN SURVEY_RESULT 
		        ON V_SURVEY_QUESTION.SURITEM_NO = SURVEY_RESULT.SURITEM_NO
		        AND V_SURVEY_QUESTION.SURQUES_NO = SURVEY_RESULT.SURQUES_NO
		        AND V_SURVEY_QUESTION.SBOARD_NO = SURVEY_RESULT.SBOARD_NO
		    WHERE V_SURVEY_QUESTION.SURQUES_TYPE &lt;&gt; 'S_MULTI'
		)
		SELECT 
		    -- 설문 데이터
		    SURVEY_BOARD.SBOARD_NO,
		    V_SURVEY_QUESTION.SURQUES_NO,
		    V_SURVEY_QUESTION.SURITEM_NO,
		    V_SURVEY_QUESTION.SURITEM_CONTENT,
		    V_SURVEY_QUESTION.SURQUES_TYPE,
		    FILTERED_SURVEY_RESULT.TOTAL_RESULT,
		
		    -- 설문조사 등록당시 전체 인원수
		    TOTAL_CNT AS TOTAL_COUNT,
		
		    (SELECT COUNT(DISTINCT SURVEY_RESULT.EMP_ID) -- EMP_ID 중복 제거
		     FROM SURVEY_RESULT
		     WHERE SURVEY_RESULT.SBOARD_NO = SURVEY_BOARD.SBOARD_NO) AS PARTICIPATED_COUNT
		FROM SURVEY_BOARD
		RIGHT OUTER JOIN V_SURVEY_QUESTION
		    ON SURVEY_BOARD.SBOARD_NO = V_SURVEY_QUESTION.SBOARD_NO
		LEFT OUTER JOIN (
		    SELECT * FROM FILTERED_SURVEY_RESULT_MULTI WHERE RN = 1 -- MULTI 조건에서 한 행만 출력
		    UNION ALL
		    SELECT * FROM FILTERED_SURVEY_RESULT_ELSE -- ELSE 조건에서 모든 행 출력
		) FILTERED_SURVEY_RESULT
		    ON V_SURVEY_QUESTION.SURITEM_NO = FILTERED_SURVEY_RESULT.SURITEM_NO
		WHERE SURVEY_BOARD.SBOARD_NO = #{sboardNo}
		ORDER BY V_SURVEY_QUESTION.SURITEM_NO
	</select>
</mapper>